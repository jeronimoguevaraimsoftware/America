//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReferenceMexe
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceMexe.PrxMxServicesSoap")]
    public interface PrxMxServicesSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/login", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> loginAsync(string user, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/userData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReferenceMexe.userDataResponseUserDataResult> userDataAsync(string user, string no_emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/userDataJDE", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReferenceMexe.userDataJDEResponseUserDataJDEResult> userDataJDEAsync(string noAB_JDE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAppDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReferenceMexe.getAppDetailResponseGetAppDetailResult> getAppDetailAsync(string idApp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getApps", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> getAppsAsync(string noEmp, int appType, bool flagMini);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAppsDock", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> getAppsDockAsync(string noEmp, int appType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAppsDock2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> getAppsDock2Async(string noEmp, int appType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getMenu", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> getMenuAsync(string idApp, string idRol, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getMenuIdiomas", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> getMenuIdiomasAsync(string idApp, string idRol, string type, string language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getMenuAbsolute", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> getMenuAbsoluteAsync(string idApp, string idRol, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getControls", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> getControlsAsync(string idMenu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getControlsModo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> getControlsModoAsync(string idMenu, int modo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/setRelationEmpApp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> setRelationEmpAppAsync(string noEmp, string app, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getMenuIdiomasExtranet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> getMenuIdiomasExtranetAsync(string idApp, string idRol, string language);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class userDataResponseUserDataResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class userDataJDEResponseUserDataJDEResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class getAppDetailResponseGetAppDetailResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface PrxMxServicesSoapChannel : ServiceReferenceMexe.PrxMxServicesSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class PrxMxServicesSoapClient : System.ServiceModel.ClientBase<ServiceReferenceMexe.PrxMxServicesSoap>, ServiceReferenceMexe.PrxMxServicesSoap
    {
        
        /// <summary>
        /// Implemente este método parcial para configurar el punto de conexión de servicio.
        /// </summary>
        /// <param name="serviceEndpoint">El punto de conexión para configurar</param>
        /// <param name="clientCredentials">Credenciales de cliente</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public PrxMxServicesSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(PrxMxServicesSoapClient.GetBindingForEndpoint(endpointConfiguration), PrxMxServicesSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PrxMxServicesSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(PrxMxServicesSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PrxMxServicesSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(PrxMxServicesSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PrxMxServicesSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<bool> loginAsync(string user, string pwd)
        {
            return base.Channel.loginAsync(user, pwd);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMexe.userDataResponseUserDataResult> userDataAsync(string user, string no_emp)
        {
            return base.Channel.userDataAsync(user, no_emp);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMexe.userDataJDEResponseUserDataJDEResult> userDataJDEAsync(string noAB_JDE)
        {
            return base.Channel.userDataJDEAsync(noAB_JDE);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMexe.getAppDetailResponseGetAppDetailResult> getAppDetailAsync(string idApp)
        {
            return base.Channel.getAppDetailAsync(idApp);
        }
        
        public System.Threading.Tasks.Task<string> getAppsAsync(string noEmp, int appType, bool flagMini)
        {
            return base.Channel.getAppsAsync(noEmp, appType, flagMini);
        }
        
        public System.Threading.Tasks.Task<string> getAppsDockAsync(string noEmp, int appType)
        {
            return base.Channel.getAppsDockAsync(noEmp, appType);
        }
        
        public System.Threading.Tasks.Task<string> getAppsDock2Async(string noEmp, int appType)
        {
            return base.Channel.getAppsDock2Async(noEmp, appType);
        }
        
        public System.Threading.Tasks.Task<string> getMenuAsync(string idApp, string idRol, string type)
        {
            return base.Channel.getMenuAsync(idApp, idRol, type);
        }
        
        public System.Threading.Tasks.Task<string> getMenuIdiomasAsync(string idApp, string idRol, string type, string language)
        {
            return base.Channel.getMenuIdiomasAsync(idApp, idRol, type, language);
        }
        
        public System.Threading.Tasks.Task<string> getMenuAbsoluteAsync(string idApp, string idRol, string type)
        {
            return base.Channel.getMenuAbsoluteAsync(idApp, idRol, type);
        }
        
        public System.Threading.Tasks.Task<string> getControlsAsync(string idMenu)
        {
            return base.Channel.getControlsAsync(idMenu);
        }
        
        public System.Threading.Tasks.Task<string> getControlsModoAsync(string idMenu, int modo)
        {
            return base.Channel.getControlsModoAsync(idMenu, modo);
        }
        
        public System.Threading.Tasks.Task<bool> setRelationEmpAppAsync(string noEmp, string app, string status)
        {
            return base.Channel.setRelationEmpAppAsync(noEmp, app, status);
        }
        
        public System.Threading.Tasks.Task<string> getMenuIdiomasExtranetAsync(string idApp, string idRol, string language)
        {
            return base.Channel.getMenuIdiomasExtranetAsync(idApp, idRol, language);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.PrxMxServicesSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.PrxMxServicesSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.PrxMxServicesSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://mexmtyis12/PrxMxServices/PrxMxServices.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.PrxMxServicesSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://mexmtyis12/PrxMxServices/PrxMxServices.asmx");
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            PrxMxServicesSoap,
            
            PrxMxServicesSoap12,
        }
    }
}
