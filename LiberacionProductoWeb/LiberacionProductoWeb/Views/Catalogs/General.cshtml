@model LiberacionProductoWeb.Models.CatalogsViewModels.GeneralViewModel;
@using Microsoft.Extensions.Localization;
@using LiberacionProductoWeb.Localize;
@using LiberacionProductoWeb.Helpers;
@using System.Globalization;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@inject IStringLocalizer<Resource> resource;
@{
    ViewData["Title"] = "General";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var btnFind = resource.GetString("BtnFind");
    var btnFilter = resource.GetString("BtnFilter");
    var lengthMenu = resource.GetString("LengthMenu");
    var searchPlaceholder = resource.GetString("SearchPlaceholder");
    var info = resource.GetString("Info");
    var emptyTable = resource.GetString("EmptyTable");
    var paginatefirst = resource.GetString("Paginatefirst");
    var paginatelast = resource.GetString("Paginatelast");
    var pageNext = resource.GetString("PageNext");
    var pagePreviuos = resource.GetString("PagePreviuos");
    var loadingRecords = resource.GetString("LoadingRecords");
    var processing = resource.GetString("Processing");
    var zeroRecords = resource.GetString("ZeroRecords");
    var infoEmpty = resource.GetString("InfoEmpty");
    var infoFiltered = resource.GetString("InfoFiltered");
    var option = "";
    option = Context.Request.Query["option"].Any() ? Context.Request.Query["option"] : "";

}

@await Html.PartialAsync("~/Views/Shared/_Navigation.cshtml")

<!-- ============================================================== -->
<!-- Page wrapper  -->
<!-- ============================================================== -->
<div id="content" class="content">


    <!-- begin breadcrumb -->
    <ol class="breadcrumb pull-right">
        <li class="breadcrumb-item"><a href="javascript:;">Inicio</a></li>
        <li class="breadcrumb-item"><a href="javascript:;">Catálogos</a></li>
        <li class="breadcrumb-item active">General</li>
    </ol>
    <!-- end breadcrumb -->
    <!-- begin page-header -->
    <h1 class="page-header">Catálogo General</h1>
    <!-- end page-header -->


    <div class="section-container section-with-top-border p-b-10">
        <div class="row">

            <div class="col-lg-20">
                <form>
                    <div class="row">
                        <div class="col-lg-3 m-b-15">
                            <div class="m-b-5"><b>Planta:</b></div>
                            <div class="input-group">
                                <select multiple asp-for="SelectedPlantsFilter" asp-items="Model.PlantsFilter"
                                        class="selectpicker show-menu-arrow" data-style="btn-inverse"
                                        data-live-search="true" title="Selecciona" onchange="getProducts(this)"> </select>
                            </div>
                        </div>
                        <div class="col-lg-3 m-b-15">
                            <div class="m-b-5"><b>Producto:</b></div>

                            <select multiple asp-for="SelectedProductsFilter" asp-items="Model.ProductsFilter"
                                    class="selectpicker show-menu-arrow combobox" data-style="btn-inverse"
                                    data-live-search="true" title="Selecciona" onchange="getTanks(this)">
                            </select>
                        </div>

                        <div class="col-lg-3 m-b-15">
                            <div class="m-b-5"><b>No. de Tanque:</b></div>
                            <div class="input-group">
                                <select multiple asp-for="SelectedTanksFilter" asp-items="Model.TanksFilter"
                                        class="selectpicker show-menu-arrow combobox" data-style="btn-inverse"
                                        data-live-search="true" title="Selecciona">
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-3 m-b-15">
                            <div class="m-b-5"> &nbsp; </div>
                            <div class="input-group">

                                <button type="button" onclick="findGeneral()" class="btn btn-inverse">Buscar</button>
                                <a href="@Url.Action("ClearFiltersGeneral", "Catalogs")" class="btn btn-white m-r-5">
                                    <i class="fa fa-eraser"></i> Limpiar Filtros
                                </a>

                            </div>
                        </div>


                    </div>


                </form>
            </div>

        </div>

    </div>


    <div class="section-container section-with-top-border p-b-5">

        <div class="row" id="rowData">
            <div class="panel panel-primary">
                <div class="panel-heading">

                    <div class="btn-group pull-left">
                        @if (User.HasClaim(SecurityConstants.PERMISSION, SecurityConstants.EDITAR_CATALOGO_GENERAL))
                        {
                            <a href="javascript:" class="waves-effect waves-light btn btn-white m-r-5" id="add-entry">
                                <i class="fa fa-plus"></i> Agregar Registro
                            </a>
                        }
                        <a href="javascript:;" class="btn btn-white m-r-5" id="ExporttoExcel">
                            <i class="fa fa-file-excel"></i> Exportar a Excel
                        </a>

                    </div>
                    <div class="btn-group pull-right">
                        <a href="javascript:;" class="btn btn-white m-r-5" id="ClearFilters">
                            <i class="fa fa-eraser"></i>Limpiar Filtros
                        </a>
                    </div>

                    <h4 class="panel-title">
                        &nbsp;
                    </h4>
                </div>

                <!-- Mensaje de error -->
                <div class="col-md-12" id="message"></div>

                <div class="panel-body">
                    <table id="data-table" class="table table-bordered table-hover">
                        <thead>
                            <tr>
                                <th class="no-sort" style="width:100px"></th>
                                <th>Planta</th>
                                <th>Producto</th>
                                <th>Tanque</th>
                                <th>Factor de conversión del tanque</th>
                                <th>Área</th>
                                <th>Etapa de Proceso/Equipo utilizado</th>
                                <th>Variable</th>
                                <th>Especificación de la variable</th>
                                <th>Límite inferior de variable, parámetro o atributo</th>
                                <th>Límite superior de variable, parámetro o atributo</th>
                                <th>Clasificación de la variable</th>
                                <th>Código del equipo</th>
                                <th>Descripción del equipo</th>
                                <th>Báscula</th>
                                <th>Bahía</th>
                                <th>Bomba de llenado</th>
                                <th>Manguera de llenado</th>
                                <th>Estado</th>
                            </tr>
                        </thead>
                        <tbody>

                            @foreach (var entry in Model.GeneralList)
                            {

                                <tr>
                                    <td>
                                        @if (User.HasClaim(SecurityConstants.PERMISSION, SecurityConstants.ELIMINAR_REGISTRO_DE_CATALOGO_GENERAL))
                                        {
                                            <a href="javascript:void(0)" onclick="deleteOnClick(this); return false;" data-id="@entry.Id" class="btn btn-default btn-xs">
                                                <i class="fa fa-trash-alt"></i>
                                            </a>
                                        }
                                        @if (User.HasClaim(SecurityConstants.PERMISSION, SecurityConstants.EDITAR_CATALOGO_GENERAL))
                                        {
                                            <a href='javascript:void(0)' onclick='editOnClick(this);return false;' id='editData' class='btn btn-default btn-xs' data-id='@entry.Id'>
                                                <i class='fa fa-edit'></i>
                                            </a>
                                        }
                                    </td>

                                    <td>
                                        @entry.PlantId
                                    </td>
                                    <td>
                                        @entry.ProductId
                                    </td>
                                    <td>
                                        @entry.TankId
                                    </td>
                                    <td>
                                        @entry.ConversionFactor
                                    </td>
                                    <td>
                                        @entry.Area
                                    </td>
                                    <td>
                                        @entry.ProcessStep
                                    </td>
                                    <td>
                                        @entry.Variable
                                    </td>
                                    <td>
                                        @entry.VariableSpecification
                                    </td>
                                    <td>
                                        @entry.LowerLimit
                                    </td>
                                    <td>
                                        @entry.UpperLimit
                                    </td>
                                    <td>
                                        @entry.VariableClasification
                                    </td>
                                    <td>
                                        @entry.CodeTool
                                    </td>
                                    <td>
                                        @entry.DescriptionTool
                                    </td>
                                    <td>
                                        @entry.WeighingMachine
                                    </td>
                                    <td>
                                        @entry.BayArea
                                    </td>
                                    <td>
                                        @entry.FillingPump
                                    </td>
                                    <td>
                                        @entry.FillingHose
                                    </td>
                                    <td>
                                        @{
                                            if (Convert.ToBoolean(entry.Estatus))
                                            {
                                                @: Activo
                                            }
                                            else
                                            {
                                                @: Inactivo
                                            }
                                        }
                                    </td>


                                </tr>
                            }

                        </tbody>
                    </table>

                </div>

            </div>


        </div>

    </div>

</div>

@section Styles {


    <link href="~/plugins/bootstrap-combobox/css/bootstrap-combobox.css" rel="stylesheet" />
    <link href="~/plugins/bootstrap-select/bootstrap-select.css" rel="stylesheet" />
    <link href="~/plugins/select2/dist/css/select2.min.css" rel="stylesheet" />
    <link href="~/plugins/bootstrap-calendar/css/bootstrap_calendar.css" rel="stylesheet" />


    <link href="~/plugins/DataTables/media/css/dataTables.bootstrap.min.css" rel="stylesheet" />
    <link href="~/plugins/DataTables/extensions/Responsive/css/responsive.bootstrap.min.css" rel="stylesheet" />
    <link href="~/plugins/DataTables/extensions/Buttons/css/buttons.bootstrap.min.css" rel="stylesheet" />

    <link href="~/plugins/gritter/css/jquery.gritter.css" rel="stylesheet" />

    <link href="~/plugins/jquery/jquery.dataTables.min.css" rel="stylesheet" />


}

@section scripts {

    <environment names="Development,Staging,Production">
        <script src="~/plugins/bootstrap-calendar/js/bootstrap_calendar.min.js"></script>

        <script src="~/plugins/gritter/js/jquery.gritter.js"></script>

        <script src="~/plugins/bootstrap-combobox/js/bootstrap-combobox.js"></script>
        <script src="~/plugins/bootstrap-select/bootstrap-select.js"></script>
        <script src="~/plugins/select2/dist/js/select2.min.js"></script>

        <script src="~/plugins/DataTables/media/js/dataTables.bootstrap.min.js"></script>

        <script src="~/plugins/bootstrap-calendar/js/bootstrap_calendar.min.js"></script>


        <script src="~/plugins/DataTables/media/js/jquery.dataTables.js"></script>
        <script src="~/plugins/DataTables/media/js/dataTables.bootstrap.min.js"></script>
        <script src="~/plugins/DataTables/extensions/Responsive/js/dataTables.responsive.min.js"></script>

        <script src="~/plugins/DataTables/extensions/Buttons/js/buttons.html5.min.js"></script>
        <script src="~/plugins/DataTables/extensions/Buttons/js/buttons.print.min.js"></script>
        <script src="~/plugins/DataTables/extensions/Buttons/js/dataTables.buttons.min.js"></script>

        <script src="~/plugins/gritter/js/jquery.gritter.js"></script>

        <script src="~/plugins/bootbox/js/bootbox.all.min.js"></script>


        <script src="~/js/demo.min.js"></script>
        <script src="~/js/apps.min.js"></script>
        <script src="~/js/catalogs.js"></script>

        <script src="~/js/linde.js"></script>
    </environment>



    <script>
    const urlSearchParams = new URLSearchParams(window.location.search);
    const params = Object.fromEntries(urlSearchParams.entries());
    const refreshPage = false;
    $(function () {

        if ('@Model.MensajeError'.length > 1) {
            $('#message').append('<div class="alert alert-danger"> <a class="close" data-dismiss="alert" href="#">&times;</a>@Model.MensajeError </div>');
        }
    });

    $(function () {

        if ('@Model.MensajeInfo'.length > 1) {
            $('#message').append('<div class="alert alert-success"> <a class="close" data-dismiss="alert" href="#">&times;</a>@Model.MensajeInfo </div>');
        }
    });



    var refresh = function () {
        window.location.href = '@Url.Action("General","Catalogs")';
    }


    var deleteOnClick = function (event) {

        bootbox.confirm({
            message: "¿Deseas eliminar el registro?",
            buttons: {
                confirm: {
                    label: 'Si',
                    className: 'btn-success'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger'
                }
            },
            callback: function (result) {
                if (result) {
                    deleteConfirm(event);
                }
            }
        });

    };

    var deleteConfirm = function (event) {

        var id = $(event).data("id");
        if (id === -1) {
            id = "";
        }

        $.ajax({
            type: "POST",
            url: "/Catalogs/DeleteGeneral/" + id,
            dataType: "json",
            success: function (response) {
                if (response.message) {
                    $.gritter.add({
                        title: "Error",
                        text: response.message,
                        class_name: "gritter-light"
                    })
                } else {
                    //sucess add, needs to refresh and show message
                    window.location.href = '@Url.Action("General","Catalogs")';
                }
            },
            failure: function (response) {
                $.gritter.add({
                    title: "Error",
                    text: "Ocurrio un error, por favor comunicate con el Administrador",
                    class_name: "gritter-light"
                })
            }
        });

    }



    @{
        var plantsTag = "<select multiple id='plants' class='selectpicker show-menu-arrow' data-style='btn-white' data-live-search='true' title='Selecciona'>";

        foreach (var item in Model.PlantsFilter)
        {
        plantsTag += "<option value='" + item.Value +  "'>" + item.Text + "</option>";
        }
        plantsTag += "</select>";


        var productsTag = "<select id='producto' class='form-control' data-style='btn-white'  title='Selecciona'>";

        foreach (var item in Model.ProductsFilter)
        {
        productsTag += "<option value='" + item.Value + "'>" + item.Text + "</option>";
        }

        productsTag += "</select>";

        var tanksTag = "<select id='tanque' class='form-control' data-style='btn-white' title='Selecciona'>";

        foreach (var item in Model.TanksFilter)
        {
        tanksTag += "<option value='" + item.Value + "'>" + item.Text + "</option>";
        }

        tanksTag += "</select>";

        var variableClasificationTag = "<select id='clasificacion' class='form-control' data-style='btn-white' title='Selecciona'>";

        foreach (var item in Model.VariableClasificationTypes)
        {
        variableClasificationTag += "<option value='" + item.Value + "'>" + item.Text + "</option>";
        }

        variableClasificationTag += "</select>";
        }


        var getEditRow = function (Id) {

        var ret = null;
        $.ajax({
            async: false,
            url: "/Catalogs/GetHTMLTagsById/" + Id,
            dataType: "json",
            success: function (data) {
                ret = data.html;
            }
        });

        return ret;

    };


    var getNewRow = function () {
        var result = "<tr>" +
            "<td> <a href='javascript:void(0)' onclick='removeOnClick(this);return false;'  class='delete-data btn btn-danger btn-xs btn-space' data-id='-1' title='Cancelar'><i class='fa fa-times-circle'></i></a>" +
            "<a href='javascript:void(0)' onclick='saveOnClick(this);return false;' id='saveData' class='save-data btn btn-info btn-xs btn-space' data-id='-1' ><i class='fa fa-save'></i></a> </td>" +
            "<td>@Html.Raw(plantsTag)</td>" +
            "<td>@Html.Raw(productsTag)</td>" +
            "<td>@Html.Raw(tanksTag)</td>" +
            "<td><input class='form-control' id='factor' type='text'></td>" +
            "<td><input class='form-control' id='area' type='text'></td>" +
            "<td><input class='form-control' id='etapa' type='text'></td>" +
            "<td><input class='form-control' id='variable'  type='text'></td>" +
            "<td><input class='form-control' id='espvariable'  type='text'></td>" +
            "<td><input class='form-control' id='liminf'  type='text'></td>" +
            "<td><input class='form-control' id='limsup'  type='text'></td>" +
            "<td>@Html.Raw(variableClasificationTag)</td>" +
            "<td><input class='form-control' id='codigo'  type='text'></td>" +
            "<td><input class='form-control' id='desc'  type='text'></td>" +
            "<td><input class='form-control' id='bascula' type='text'></td>" +
            "<td><input class='form-control' id='bahia'  type='text'></td>" +
            "<td><input class='form-control' id='bomba'  type='text'></td>" +
            "<td><input class='form-control' id='manguera'  type='text'></td>" +
            "<td><select id='estado' class='form-control'><option  value='true'>Activo</option><option value='false'>Inactivo</option></select> </td>" +
            "</tr>"
        return result;
    };



    var removeOnClick = function (event) {
        $(event).closest("tr").remove();
        $("#ExporttoExcel").removeClass("disabled");
        $("#add-entry").removeClass("disabled");
    };

    var isEdit = false;
    var isCreate = false;

    var editOnClick = function (event) {

        var Id = $(event).data("id");

        if (isCreate) {
            return false;
        }


        if (!isEdit) {
            //remueve y pinta los controles
            isEdit = true;
            $("#add-entry").addClass("disabled");
            $("#ExporttoExcel").addClass("disabled");
            $(event).closest("tr").replaceWith(getEditRow(Id));

        }
    };


    var saveConfirm = function (event) {


        if (isEdit) {
            $("#add-entry").removeClass("disabled");
            $("#ExporttoExcel").removeClass("disabled");
        }

        isEdit = false;
        isCreate = false;




        var id = $(event).data("id");

        if (id === -1) {
            id = "";
        }

        var planta = "";
        var producto = "";
        var tanque = "";
        var factor = "";
        var area = "";
        var etapa = "";
        var variable = "";
        var espvariable = "";
        var liminf = "";
        var limsup = "";
        var clasificacion = "";
        var codigo = "";
        var desc = "";
        var bascula = "";
        var bahia = "";
        var bomba = "";
        var manguera = "";
        var estado = "";



        $(event).closest("tr").each(function () {
            $.each(this.cells, function () {
                //gets values for each cell

                if (id) {

                    if ($(this).find("#plants").length) {
                        planta = $(this).find("#plants").val();
                    }

                } else {
                    if ($(this).find("#plants").length) {
                        planta = $(this).find("#plants").val().join(', ');
                    }

                }

                if ($(this).find("#producto").length) {
                    producto = $(this).find("#producto").val();
                }
                if ($(this).find("#tanque").length) {
                    tanque = $(this).find("#tanque").val();
                }

                if ($(this).find("#factor").length) {
                    factor = $(this).find("#factor").val();
                }
                if ($(this).find("#etapa").length) {
                    etapa = $(this).find("#etapa").val();
                }
                if ($(this).find("#area").length) {
                    area = $(this).find("#area").val();
                }
                if ($(this).find("#variable").length) {
                    variable = $(this).find("#variable").val();
                }
                if ($(this).find("#espvariable").length) {
                    espvariable = $(this).find("#espvariable").val();
                }
                if ($(this).find("#liminf").length) {
                    liminf = $(this).find("#liminf").val();
                }
                if ($(this).find("#limsup").length) {
                    limsup = $(this).find("#limsup").val();
                }
                if ($(this).find("#clasificacion").length) {
                    clasificacion = $(this).find("#clasificacion").val();
                }
                if ($(this).find("#codigo").length) {
                    codigo = $(this).find("#codigo").val();
                }
                if ($(this).find("#desc").length) {
                    desc = $(this).find("#desc").val();
                }
                if ($(this).find("#bascula").length) {
                    bascula = $(this).find("#bascula").val();
                }
                if ($(this).find("#bahia").length) {
                    bahia = $(this).find("#bahia").val();
                }
                if ($(this).find("#bomba").length) {
                    bomba = $(this).find("#bomba").val();
                }
                if ($(this).find("#manguera").length) {
                    manguera = $(this).find("#manguera").val();
                }
                if ($(this).find("#estado").length) {
                    estado = $(this).find("#estado").val();
                }
            });
        });




        $.ajax({
            type: "POST",
            url: "/Catalogs/SaveOrEditGeneral",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            data: JSON.stringify({
                id: String(id),
                planta: planta,
                producto: producto,
                tanque: tanque,
                factor: factor,
                area: area,
                etapa: etapa,
                variable: variable,
                espvariable: espvariable,
                liminf: liminf,
                limsup: limsup,
                clasificacion: clasificacion,
                codigo: codigo,
                desc: desc,
                bascula: bascula,
                bahia: bahia,
                bomba: bomba,
                manguera: manguera,
                estado: estado

            }),
            contentType: "application/json",
            dataType: "json",
            success: function (response) {

                if (response.message) {

                    $.gritter.add({
                        title: "Error",
                        text: response.message,
                        class_name: "gritter-light"
                    })
                } else {
                    //sucess add, needs to refresh and show message
                    window.location.href = '@Url.Action("General","Catalogs")';
                }



            },
            failure: function (response) {

                //failure, shgow messahe with error
                alert("Fail");

            }
        });
    }


    var saveOnClick = function (event) {


        bootbox.confirm({
            message: "¿Deseas guardar los cambios?",
            buttons: {
                confirm: {
                    label: 'Si',
                    className: 'btn-success'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger'
                }
            },
            callback: function (result) {
                if (result) {
                    saveConfirm(event);
                }
            }
        });




    };


    $(document).ready(function () {

        App.init();
        Demo.init();


        //radioswitch.init()

        //$("#form").validate();

        $('#data-table thead tr').clone(true).appendTo('#data-table thead');
        $('#data-table thead tr:eq(1) th').each(function (i) {

            if (i === 0) {
                return;
            }

            var title = $(this).text();
            $(this).html('<input type="text" placeholder="Buscar ' + title + '" />');

            $('input', this).on('keyup change', function () {
                if (table.column(i).search() !== this.value) {
                    table
                        .column(i)
                        .search(this.value)
                        .draw();
                }
            });
        });


        var table = $("#data-table").DataTable(
            {
                pageLength: 20,
                orderCellsTop: true,
                fixedHeader: true,
                bLengthChange: false,
                bFilter: true,
                bAutoWidth: false,
                searching: true,
                sDom: 'lrtip',
                "bInfo": false,
                buttons: [
                    {
                        extend: 'csv',
                        charset: 'utf-8',
                        bom: true
                    }
                ],
                "dom": 'rtp',
                "language": {
                    "search": '<a href="@Url.Action("Index", "home" )" class="btn btn-white m-r-5"><i class="fa fa-eraser"></i> @btnFilter</a> <br><div><i class="fa fa-filter" aria-hidden="true"></i>Buscar',
                    "searchPlaceholder": '@searchPlaceholder',
                    "emptyTable": "@emptyTable",
                    "lengthMenu": "@lengthMenu",
                    "info": "@info",
                    "paginate": {
                        "first": "@paginatefirst",
                        "last": "@paginatelast",
                        "next": "@pageNext",
                        "previous": "@pagePreviuos"
                    },
                    "loadingRecords": "@loadingRecords",
                    "processing": "@processing",
                    "zeroRecords": "@zeroRecords",
                    "infoEmpty": "@infoEmpty",
                    "infoFiltered": "@infoFiltered",
                },
                "order": [],
                "columnDefs": [{
                    "targets": 'no-sort',
                    "orderable": false,
                }]

            });


        $("#ExporttoExcel").on("click", function () {
            table.button('.buttons-csv').trigger();
        });

        $("#ClearFilters").on("click", function () {

            $('#data-table thead tr:eq(1) th').each(function (i) {
                if (i === 0)
                    return;
                $('input', this).val("").change();
            });


        });



        //Data Table manipulation
        //$.fn.dataTable.render.moment("M/D/YYYY");

        $('.selectpicker').selectpicker();



        $('#add-entry').on('click', function (event) {

            event.preventDefault();

            $('#data-table tr:eq(1)').after(getNewRow());

            $("#ExporttoExcel").addClass("disabled");
            // $('#addGeneralCatalog').modal('show');

            if (!isCreate) {

                isCreate = true;
                $("#ExporttoExcel").addClass("disabled");
                $("#add-entry").addClass("disabled");
            }
            else {
                $("#add-entry").addClass("disabled")
            }
            $('.selectpicker').selectpicker();
        });

    });

    var getProducts = function (element) {
        const plantId = $(element).val()

        $.ajax({
            type: "GET",
            url: "/Home/GetProduts?plantId=" + plantId,
            success: function (response) {
                $("#SelectedProductsFilter").empty()
                $("#SelectedTanksFilter").empty()

                $("#SelectedProductsFilter").prop("disabled", false)
                $("#SelectedTanksFilter").prop("disabled", true)

                response.data.forEach(function (item) {
                    $("#SelectedProductsFilter").append($('<option>', {
                        value: item.value,
                        text: item.text
                    }))
                });

                $('#SelectedProductsFilter').selectpicker('refresh');

                if (!isNullOrEmpty(params['SelectedProductsFilter'])) {
                    $('#SelectedProductsFilter').val(params['SelectedProductsFilter'].split(','))
                    getTanks("#SelectedProductsFilter")
                    $('#SelectedProductsFilter').selectpicker('refresh');
                }
            }
        });
    }

    var getTanks = function (element) {
        const plantId = $("#SelectedPlantsFilter").val()
        const productId = $(element).val()

        $.ajax({
            type: "GET",
            url: "/Home/GetTanks?plantId=" + plantId + "&productId=" + productId,
            success: function (response) {
                $("#SelectedTanksFilter").empty()

                $("#SelectedTanksFilter").prop("disabled", false)

                response.data.forEach(function (item) {
                    $("#SelectedTanksFilter").append($('<option>', {
                        value: item.value,
                        text: item.text
                    }))
                });

                $('#SelectedTanksFilter').selectpicker('refresh');

                if (!isNullOrEmpty(params['SelectedTanksFilter'])) {
                    $('#SelectedTanksFilter').val(params['SelectedTanksFilter'].split(','))
                    $('#SelectedTanksFilter').selectpicker('refresh');
                }
            }
        });
    }

    window.onload = function () {
        var optionVal = '@option';
        if (isNullOrEmpty(optionVal)) {
            $("#SelectedProductsFilter").empty();
            $("#SelectedTanksFilter").empty();

            $('#SelectedProductsFilter').selectpicker('refresh');
            $('#SelectedTanksFilter').selectpicker('refresh');
        }
        else {
            $('#SelectedPlantsFilter').val(params['SelectedPlantsFilter'].split(','))
            $('#SelectedPlantsFilter').selectpicker('refresh');

            $('#SelectedProductsFilter').val(params['SelectedProductsFilter'].split(','))
            $('#SelectedProductsFilter').selectpicker('refresh');

            $('#SelectedTanksFilter').val(params['SelectedTanksFilter'].split(','))
            $('#SelectedTanksFilter').selectpicker('refresh');

/*            SelectedProductsFilter.split(",").forEach(element => console.log(element));*/


            }
        }


    var findGeneral = function () {

        const plants = $("#SelectedPlantsFilter").val()
        const products = $("#SelectedProductsFilter").val()
        const tanks = $("#SelectedTanksFilter").val()

        var url = '@Url.Action("General", "Catalogs" )';
        window.location.href = `${url}?SelectedPlantsFilter=${plants}&SelectedProductsFilter=${products}&SelectedTanksFilter=${tanks}&Option=1`;


    }

    </script>

}
